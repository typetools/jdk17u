jobs:

- job: build_jdk
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk17-plus:latest
  steps:
  - bash: |
      whoami
      git config --get remote.origin.url
      pwd
      ls -al
      env | sort
    displayName: show environment
  - bash: pwd && ls && bash ./configure --with-jtreg=/usr/share/jtreg --disable-warnings-as-errors
    displayName: configure
  - bash: make jdk
    timeoutInMinutes: 90
    displayName: make jdk
  ## This works only after `make images`
  # - bash: build/*/images/jdk/bin/java -version
  #   displayName: version
  ## Don't run tests, which pass only with old version of tools (compilers, etc.).
  # - bash: make -C /jdk run-test-tier1
  #   displayName: make run-test-tier1

- job: build_jdk17u
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk17-plus:latest
  timeoutInMinutes: 0
  steps:
  - bash: |
      whoami
      git config --get remote.origin.url
      pwd
      ls -al
      env | sort
    displayName: show environment
  - bash: |
      set -ex
      if [ -d /tmp/$USER/plume-scripts ]; \
        then git -C /tmp/$USER/plume-scripts pull -q > /dev/null 2>&1 ; \
        else mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git ; \
      fi
    displayName: plume-scripts
  # This creates ../jdk17u .
  # If the depth is too small, the merge will fail.
  - bash: |
      set -ex
      /tmp/$USER/plume-scripts/git-clone-related typetools jdk17u ../jdk17u -q --depth 99
    displayName: clone-related-jdk17u
  - bash: |
      set -ex
      git config --global user.email "you@example.com"
      git config --global user.name "Your Name"
      eval `/tmp/$USER/plume-scripts/ci-info typetools`
      cd ../jdk17u && git pull --no-edit https://github.com/${CI_ORGANIZATION}/jdk ${CI_BRANCH} || (echo "Merge failed; see 'Pull request merge conflicts' at https://github.com/typetools/jdk/blob/master/README" && false)
    displayName: git merge
  - bash: cd ../jdk17u && export JT_HOME=/usr/share/jtreg && bash ./configure --with-jtreg --disable-warnings-as-errors
    displayName: configure
  - bash: cd ../jdk17u && make jdk
    displayName: make jdk
  ## This works only after `make images`
  # - bash: cd ../jdk17u && build/*/images/jdk/bin/java -version
  #   displayName: version
  # - bash: make -C /jdk17u run-test-tier1
  #   timeoutInMinutes: 0
  #   displayName: make run-test-tier1
  # - bash: make -C /jdk17u :test/jdk:tier1
  ## Temporarily comment out because of trouble finding junit and jasm
  # - bash: cd ../jdk17u && make run-test TEST="jtreg:test/jdk:tier1"
  #   timeoutInMinutes: 0
  #   displayName: make run-test

- job: test_cftests_all_jdk8
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk8:latest
  timeoutInMinutes: 90
  steps:
  - checkout: self
    fetchDepth: 25
  - bash: mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
    displayName: clone plume-scripts
  - bash: /tmp/$USER/plume-scripts/git-clone-related typetools checker-framework
    displayName: clone checker-framework
  - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-all.sh)
    displayName: test-cftests-all.sh

- job: test_cftests_all_jdk11
  timeoutInMinutes: 90
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk11:latest
  steps:
  - checkout: self
    fetchDepth: 25
  - bash: mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
    displayName: clone plume-scripts
  - bash: /tmp/$USER/plume-scripts/git-clone-related typetools checker-framework
    displayName: clone checker-framework
# test-cftests-all.sh sometimes runs out of memory, but running its component parts in sequence does not.
#   - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-all.sh)
#     displayName: test-cftests-all.sh
  - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-junit.sh)
    displayName: test-cftests-junit.sh
  - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-nonjunit.sh)
    displayName: test-cftests-nonjunit.sh
  - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-inference.sh)
    displayName: test-cftests-inference.sh
  - bash: (cd ../checker-framework && checker/bin-devel/test-typecheck.sh)
    displayName: test-typecheck.sh
## Here is how to create artifacts that can be downloaded.
#   - bash: (cd ../checker-framework/checker/build/jtregJdk11/ && tar -czvf all.tgz all)
#     condition: succeededOrFailed()
#     displayName: tar jtregJdk11/all
#   - publish: $(System.DefaultWorkingDirectory)/../checker-framework/checker/build/jtregJdk11/all.tgz
#     artifact: all.tgz
#     condition: failed()
#     displayName: publish all.tgz

- job: test_cftests_all_jdk17
  timeoutInMinutes: 90
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk17:latest
  steps:
  - checkout: self
    fetchDepth: 25
  - bash: mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
    displayName: clone plume-scripts
  - bash: /tmp/$USER/plume-scripts/git-clone-related typetools checker-framework
    displayName: clone checker-framework
  - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-all.sh)
    displayName: test-cftests-all.sh

- job: test_cftests_all_jdk18
  timeoutInMinutes: 90
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk18:latest
  steps:
  - checkout: self
    fetchDepth: 25
  - bash: mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
    displayName: clone plume-scripts
  - bash: /tmp/$USER/plume-scripts/git-clone-related typetools checker-framework
    displayName: clone checker-framework
  - bash: (cd ../checker-framework && checker/bin-devel/test-cftests-all.sh)
    displayName: test-cftests-all.sh

- job: test_daikon
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk17:latest
  timeoutInMinutes: 70
  steps:
  - checkout: self
    fetchDepth: 25
  - bash: mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
    displayName: clone plume-scripts
  - bash: /tmp/$USER/plume-scripts/git-clone-related typetools checker-framework
    displayName: clone checker-framework
  - bash: (cd ../checker-framework && checker/bin-devel/test-daikon.sh)
    displayName: test-daikon.sh

- job: test_plume_lib
  pool:
    vmImage: 'ubuntu-latest'
  container: mdernst/cf-ubuntu-jdk17:latest
  steps:
  - checkout: self
    fetchDepth: 25
  - bash: mkdir -p /tmp/$USER && git -C /tmp/$USER clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
    displayName: clone plume-scripts
  - bash: /tmp/$USER/plume-scripts/git-clone-related typetools checker-framework
    displayName: clone checker-framework
  - bash: (cd ../checker-framework && checker/bin-devel/test-plume-lib.sh)
    displayName: test-plume-lib.sh
